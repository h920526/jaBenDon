buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath 'com.eriwen:gradle-css-plugin:1.11.1'
		classpath 'com.eriwen:gradle-js-plugin:1.12.1'
	}
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'css'
apply plugin: 'js'

version = '1.1.0'

sourceCompatibility = 1.7
targetCompatibility = 1.7
[compileJava, javadoc, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
	mavenCentral()
}

dependencies {
	compile (
		// spring
		'org.springframework:spring-webmvc:4.1.4.RELEASE',
		'org.springframework.data:spring-data-jpa:1.7.1.RELEASE',
		// json
		'org.codehaus.jackson:jackson-mapper-asl:1.9.13',
		// database
		'org.hibernate:hibernate-core:4.3.7.Final',
		'org.hibernate:hibernate-entitymanager:4.3.7.Final',
		'org.hibernate:hibernate-validator:5.1.3.Final',
		'com.h2database:h2:1.4.184',
		'com.mchange:c3p0:0.9.2.1',
		// logger
		'org.apache.logging.log4j:log4j-core:2.1'
	)
	providedCompile(
		'javax.servlet:javax.servlet-api:3.1.0'
	)
	testRuntime(
		'junit:junit:4.12',
		'org.springframework:spring-test:4.1.4.RELEASE'
	)
}

css.source {
	prod {
		css {
			srcDir 'src/main/webapp/styles'
			include '**/*.css'
			exclude '*.min.css'
		}
	}
}

combineCss {
	source = css.source.prod.css.files
	dest = '${buildDir}/styles.css'
}

minifyCss {
	source = combineCss
	dest = '${buildDir}/styles.min.css'
}

javascript.source {
	prod {
		js {
			srcDir 'src/main/webapp/scripts'
			include '**/*.js'
			include '*.min.js'
		}
	}
}

combineJs {
	source = javascript.source.prod.js.files
	dest = '${buildDir}/scripts.js'
}

minifyJs {
	source = combineJs
	dest = '${buildDir}/scripts.min.js'
}

war {
	exclude 'bower_components/angular/docs/**'
	exclude 'bower_components/clockpicker/assets/**'
	exclude 'bower_components/jquery-ui/demos/**'
	exclude 'bower_components/jquery-ui/docs/**'
	exclude 'styles'
	exclude 'scripts'
	exclude 'index.html'
	// minify version
	from('build') {
		include 'styles.min.css'
		into 'css'
	}
	from('build') {
		include 'scripts.min.js'
		into 'js'
	}
}
